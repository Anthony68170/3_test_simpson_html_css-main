
/* GENERAL */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: Arial, Helvetica, sans-serif;

}

body {
    background-color: rgba(255, 217, 0, 0.993);

}

p{
    color: black;
    
}

#container {
    background-color: white;
    width: 80%;
    margin: auto;
    display: flex; 
    flex-direction: column;
    /*flex-wrap: wrap; */
}

header {
    background-color: rgb(106, 177, 235);
    width: 100%;
    display: flex;
    flex-direction: column;
}

h2 {
    background-color:rgb(106, 177, 235);
    color: white;
    text-align: center;
    width: 100%;
}

figure {
    width: 100%;
}
/* HEADER */
.simpsonsHero{ 
    width: 100%;
    border-bottom: 2px solid white;
}

nav{
    background-color: rgb(106, 177, 235); 
    color: white; 
    text-align: center;
    width: 100%; 
    padding: 1%;
    display: flex;
    height: auto;
    justify-content: space-around;
}

ul {
    list-style-type: none;
    max-width: 100%;
    justify-content: space-around; 
    text-align: center;
    display: flex; 
   
  } 
  

nav>ul>li>a{ 
    display: block;
    padding: 1em;
    color:white;
    text-align: center;
    /*max-width: fit-content;*/
   
}
/* article */
main {
    background-color: white;
    width: 100%;
    /*align-items: flex-end;*/
    display: flex;
    flex-direction: column;

}

.main-content {
    width: 100%;
    background-color: white;
    display: flex; 
    /*flex-direction: column;*/
 
}

article {
    background-color: white;
    width: 70%;
    padding: 1em;
}

h1{ 
    color: rgba(212, 193, 21, 0.842);
    padding: 1%;
    text-align: left;
    
}

 article>p{
    color: black;
    padding: 1%;
    text-align: justify;
    width: 100%;
 }

 .figure-main{
    object-fit: contain;
    display: flex; flex-direction: column;
    height: 50%;
    justify-content: space-evenly;
    width: 100%;
    flex-direction: row;
 }

.simpsonsImg1{
    width: 33%;
    border: 1px solid; color: black;
}

.simpsonsImg2{
    width: 33%;
    padding: 1%;
    border: 1px solid; color: black;
}

.simpsonsImg3{
    width: 33%;
    padding: 1%;
    border: 1px solid; color: black;
}

aside{
    width: 30%;
    background-color:  rgb(106, 177, 235);
    text-align: center;
    padding: 1%;
    display: flex; flex-direction: column; justify-content: flex-end;
    height: 100%;

}

.simpsonsImg4{
    width:100%;
    text-align: center;
    padding: 1%; color: white;
}

h3{
    text-align: center;
    color: white;
    font-weight: bolder;
}

span{
    color: white;
    font-weight: 500;
    font-style: italic;
    padding: 2em;
}

p{
    color: white;
    font-weight: 100;
    text-align: justify;
}

footer{
    background-color: rgb(26, 29, 228);
    color: white;
    font-weight: normal;
    font-size: 16px;
    text-align: center;
    padding: 1%;
    flex-direction: column;
}


@media screen and (max-width: 640px) { /* Ici on appelle une fonction permettant de contredire le code de base, dans le but que le code puisse s'adapter aux différents types d'écran de l'utilisateur */

    #container { /* Ici on appelle l'un des parents pour contrôler sa forme lors de la modification de la taille de l'écran par l'utilisateur */ 
        width: 100%; /* Ici on fixe la largeur à 100% de ce container intégrant le header. Il prend donc la totalité de la largeur de son conteneur (parent) */
    }

    nav { /* Ici on appelleune barre de navigation comme fonction pour faire apparaître un menu pour l'utilisateur */
        width: 100%; /* Ici on fixe la largeur du block "nav" contenant le menu, à 100% */
    }

    ul { /* Ici on appelle / intègre une liste pour l'utilisateur */
        flex-direction: column;
        justify-content: space-around;
        align-items: center;
    }

/* li => Ici on fixe un lien à la liste "ul" */

    a { /* li => Ici on fixe les règles du texte */
        text-align: center; /* on demande au texte d'être centré par rappoprt à son contenu */
    }

    main { /* li => Ici on appelle le container nommé "main"; parent direct de "h1 => Titre" et de "main-content" => Article et les 3 Figures*/
        width: 100%; /* Ici, on fixe la largeur de "main" à 100%; correspondant à la largeur totale de son parent (container => enfant direct du body) */
    }

    h1{ /* Ici, on appelle l'élément h1 pour contredire une règle du script principal */
        padding:16px; /* Ici, on place un rembourrage intérieur dans l'élément h1 */
    }

    .main-content { /* ici, on appelle le block nommé "main-content", enfant direct de "main" */
        width: 100%; /* On décide de modifier sa largeur totale donc 100% */
        background-color: white; /* Ici, on décide de fixer la couleur de fond de "main-content" en blanc */
        flex-direction: column; /* Ici, on décide de placer l'élément en colonne */
    }
    
    article{ /* Ici, on appelle l'élément "article" */
        width: 100%; /* Ici, on fixe sa largeur à 100% */
    }

    article>p{ /* Ici, on appelle le texte de l'article */
        width: 100%; /* Ici, on fixe sa largeur à 100% */
        text-align: justify; /* Ici, on demande d'aligner le texte en position "justifié" */
    }

    aside { /* Ici, on appelle l'élément "aside" */
        width: 100%;
    }
  }
